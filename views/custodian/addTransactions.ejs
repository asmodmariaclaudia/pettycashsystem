<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Custodian Add Transaction</title>
    <link rel="stylesheet" href="css/addTrans.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"/>
</head>
<body> 
    <div class="sidebar">
        <ul class="menu">
            <li>
                <a href="dashboardCustodian">
                    <i class="fas fa-home"></i>
                    <span>Dashboard</span>
                </a>
            </li>
            
             <li>
                <a href="addTrans">
                     <i class="fas fa-plus-circle"></i>
                     <span>Add Transaction</span>
                </a> 
             </li>
             <li class="logout">
                <a href="logout">
                     <i class="fas fa-sign-out-alt"></i>
                     <span>Logout</span>
                </a> 
             </li>
        </ul>
    </div>

    <div class="main">
        <div class="topbar">
            <div class="toggle">
                <i class="fas fa-bars"></i>
            </div>
            <div class="title">
                <span>Petty Cash System</span>
            </div>
            <div class="admin">Hello, <%= custodianFullName %>!</div>
        </div>

        <div class="add-transaction-container">
            <h2 class="transaction-title">Add Transaction</h2>
            <div class="transaction-content">

                <div class="transaction-form">
                    <form action="/addTransaction" method="post">

                        <div class="form-group">
                            <label for="custodian_name">Custodian Name:</label>
                            <input type="text" id="custodian_name" name="cusName" value="<%= custodian_name %>" readonly>
                        </div>

                        <div class="form-group">
                            <label for="purchaser">Purchaser:</label>
                            <input type="text" id="purchaser" name="purchaser" required>
                        </div>

                        <div class="form-group">
                            <label for="employeeId">Employee ID:</label>
                            <input type="text" id="employeeId" name="employeeId" required>
                        </div>

                        <div class="form-group">
                            <label for="amountGiven">Amount Given:</label>
                            <input type="number" id="amountGiven" name="amountGive" step="0.01" required>
                        </div>

                        <div class="form-group">
                            <label for="description">Description:</label>
                            <input type="text" id="description" name="description" required>
                        </div>

                        <div class="form-group">
                            <label for="total">Total:</label>
                            <input type="number" id="total" name="total" readonly>
                        </div>

                        <div class="items-table">
                            <table>
                                <thead>
                                    <tr>
                                        <th>Item</th>
                                        <th>Amount</th>
                                        <th>Quantity</th>
                                        <th>Total</th>
                                        <th>Remove</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr class="total-row">
                                        <td colspan="4" class="total-cell">Total: ₱0.00</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        
                        <div class="add-item-section">
                            <input type="text" id="itemName" placeholder="Item Name">
                            <input type="number" id="itemAmount" placeholder="P0.00" step="0.01">
                            <input type="number" id="itemQuantity" placeholder="Quantity" min="1">
                            <button id="addItemButton">Add Item</button>

                        </div>
                        
                        <div class="action-buttons">
                            <button id="addTransactionButton" type="submit">Make Transaction</button>
                            <button id="cancelTransactionButton" type="button">Cancel</button>
                        </div>
                    </form>

                    <div id="toaster" style="display: none; position: fixed; bottom: 20px; right: 20px; background: #f44336; color: white; padding: 10px; border-radius: 5px;">
                        <span id="toaster-message"></span>
                    </div>

                    <div class="transaction-form">
                        <form action="/updateTransaction" method="post" style="display: none;">
                            <!-- Fields for additional data upon approval -->
                            <div id="additionalFields">
                                <div class="form-group">
                                    <label for="orNumber">OR No.:</label>
                                    <input type="text" id="orNumber" name="orNumber">
                                </div>
                                <div class="form-group">
                                    <label for="personalContributions">Personal Contributions:</label>
                                    <input type="number" id="personalContributions" name="personalContributions">
                                </div>
                                <div class="form-group">
                                    <label for="storeName">Store Name:</label>
                                    <input type="text" id="storeName" name="storeName">
                                </div>
                                <div class="receipts-section">
                                    <label for="receiptsUpload">Receipts:</label>
                                    <input type="file" id="receiptsUpload" name="receiptsUpload[]" multiple>
                                    <div class="uploaded-receipts">
                                        <!-- Uploaded receipts will be listed here -->
                                    </div>
                                </div>
    
                                <!-- Buttons for approved transaction -->
                                <div id="approvedButtons" style="display: none;" class="action-buttons">
                                    <button id="submitAdditionalDetailsButton" type="submit">Submit Additional Details</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <script>
            // Redirect to the dashboard when the cancel button is clicked
            document.getElementById('cancelTransactionButton').addEventListener('click', function() {
                window.location.href = 'dashboardCustodian'; // Update the path if necessary
            });
        </script>

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const toaster = document.getElementById('toaster');
                const toasterMessage = document.getElementById('toaster-message');
                const errorMessage = "<%= typeof error !== 'undefined' ? error : '' %>";

                if (errorMessage) {
                    toasterMessage.textContent = errorMessage;
                    toaster.style.display = 'block';
                    setTimeout(() => {
                        toaster.style.display = 'none';
                    }, 5000); // Hide after 5 seconds
                }
            });
        </script>
        
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const addItemButton = document.getElementById('addItemButton');
                const itemsTableBody = document.querySelector('.items-table tbody');
                const totalCell = document.querySelector('.items-table .total-cell');
                const totalInput = document.getElementById('total'); // Reference to the total input field
                let itemCount = 0; // Track the item count dynamically
                let total = 0; // Initialize total

                // Update the total price
                function updateTotal() {
                    totalCell.textContent = `Total: ₱${total.toFixed(2)}`;
                    totalInput.value = total.toFixed(2); // Update the input field
                }

                // Remove an item from the table
                function removeItem(event) {
                    const row = event.target.closest('tr'); // Find the closest table row
                    const rowTotal = parseFloat(row.querySelector('td:nth-child(4)').textContent.replace('₱', '')); // Get the total of the row
                    total -= rowTotal; // Subtract the row total from the overall total
                    updateTotal();
                    row.remove(); // Remove the row
                }

                // Add item to the table
                addItemButton.addEventListener('click', function (event) {
                    event.preventDefault(); // Prevent form submission

                    const itemName = document.getElementById('itemName').value.trim();
                    const itemAmount = parseFloat(document.getElementById('itemAmount').value.trim());
                    const itemQuantity = parseInt(document.getElementById('itemQuantity').value.trim(), 10);

                    if (!itemName || isNaN(itemAmount) || itemAmount <= 0 || isNaN(itemQuantity) || itemQuantity <= 0) {
                        alert('Please enter valid item details.');
                        return;
                    }

                    const rowTotal = itemAmount * itemQuantity;

                    const newRow = document.createElement('tr');
                    newRow.innerHTML = `
                        <td>${itemName}</td>
                        <td>₱${itemAmount.toFixed(2)}</td>
                        <td>${itemQuantity}</td>
                        <td>₱${rowTotal.toFixed(2)}</td>
                        <td>
                            <button class="remove-item-button">X</button>
                        </td>
                        <td style="display:none;">
                            <input type="hidden" name="items[${itemCount}][itemName]" value="${itemName}">
                            <input type="hidden" name="items[${itemCount}][itemAmount]" value="${itemAmount}">
                            <input type="hidden" name="items[${itemCount}][itemQuantity]" value="${itemQuantity}">
                        </td>
                    `;

                    newRow.querySelector('.remove-item-button').addEventListener('click', removeItem);

                    itemsTableBody.insertBefore(newRow, itemsTableBody.querySelector('.total-row'));
                    total += rowTotal;
                    updateTotal();

                    itemCount++;
                    document.getElementById('itemName').value = '';
                    document.getElementById('itemAmount').value = '';
                    document.getElementById('itemQuantity').value = '';
                });
            });
        </script>

        <script>
            const toggle = document.querySelector('.toggle');
            const sidebar = document.querySelector('.sidebar');
            const main = document.querySelector('.main');

            if (localStorage.getItem('sidebarActive') === 'true') {
                sidebar.classList.add('active'); 
                main.classList.add('active');
            }

            toggle.onclick = function () {
                sidebar.classList.toggle('active');
                main.classList.toggle('active');
                localStorage.setItem('sidebarActive', sidebar.classList.contains('active'));
            };

            const currentLocation = window.location.pathname;
            const menuItems = document.querySelectorAll('.sidebar .menu li a');
            menuItems.forEach(item => {
                if (item.getAttribute('href') === currentLocation.split('/').pop()) {
                    item.parentElement.classList.add('active');
                }
            });
        </script>
    </div>
</body>
</html>
